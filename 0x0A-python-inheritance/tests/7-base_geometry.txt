====================================
How to use 7-base_geometry.py module
====================================

This moddule contain one class that validates integer for its objects.

USGAE
=====
::

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)

::

	>>> bg.integer_validator("Name", "John")
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Age", 0)
	Traceback (most recent call last):
		  ...
	ValueError: Age must be greater than 0

::

	>>> bg.integer_validator("Distance", -4)
	Traceback (most recent call last):
		  ...
	ValueError: Distance must be greater than 0

::

	>>> bg.integer_validator("Name", None)
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", True)

::
	>>> bg.integer_validator("Name", False)
	Traceback (most recent call last):
		  ...
	ValueError: Name must be greater than 0

::

	>>> bg.integer_validator("Name", 3+2j)
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", 3.12)
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", (3, 4,5))
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", [3, 4,5])
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", {3, 4,5})
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.integer_validator("Name", {'one':1, 'two':2})
	Traceback (most recent call last):
		  ...
	TypeError: Name must be an integer

::

	>>> bg.area()
	Traceback (most recent call last):
		  ...
	Exception: area() is not implemented

::
